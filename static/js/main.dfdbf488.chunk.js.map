{"version":3,"sources":["reducers/filesReducer.js","actions/types.js","reducers/uiReducer.js","reducers/errorReducer.js","reducers/lettersReducer.js","reducers/index.js","components/letters/LetterItem/index.js","utils/formatDate.js","components/letters/LettersContainer/index.js","components/form/FileInput/index.js","actions/fileActions.js","actions/uiActions.js","components/MessageStatus/index.js","components/form/EmailInput/index.js","components/form/SubjectInput/index.js","components/form/MessageInput/index.js","components/form/AttachFilesButton/index.js","components/form/FileList/FileListItem.js","components/form/FileList/FileListContainer.js","actions/formActions.js","components/form/FormContainer/index.js","storage/utils.js","components/MainWrapper/index.js","App.js","index.js"],"names":["initialState","filesReducer","state","arguments","length","undefined","action","newState","Object","toConsumableArray","type","push","payload","splice","isFileDndDisplayed","lettersLoading","isLetterSend","uiReducer","objectSpread","email","errorReducer","file","form","size","lettersReducer","combineReducers","test","reducer","files","ui","error","letters","LetterItem","_ref","letter","date","result","month","split","formatDate","react_default","a","createElement","className","subject","status","connect","loading","renderContent","map","index","letters_LetterItem","key","isDisplayed","fileError","addFile","dispatch","fileName","name","newFile","encoding","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","then","content","catch","err","console","log","closeDnd","cn","file-input_displayed","file-input","onDrop","event","preventDefault","dataTransfer","onDragOver","onClick","index_esm","window","location","reload","EmailInput","label","person","Field","component","concat","id","placeholder","SubjectInput","MessageInput","openDnd","removeFile","FileList_FileListItem","keys","formConnected","reduxForm","handleSubmit","submitForm","formError","reset","onSubmit","formValues","noValidate","form_EmailInput","from_name","from_email","to_name","to_email","form_SubjectInput","form_MessageInput","message","FileList_FileListContainer","form_AttachFilesButton","getState","_validateFormFields","value","errors","_i","_keys","trim","validator","isEmail","isEmpty","isValid","validateFormFields","summSize","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","validateFilesSize","payloadFiles","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","from.name","from.email","to.name","text","attaches","sendwhen","mca","sendsay","Sendsay","auth","login","password","request","res","item","localStorage","JSON","parse","setItem","stringify","addStorageItem","components_MessageStatus","form_FormContainer","form_FileInput","letters_LettersContainer","middleware","thunk","store","createStore","reducers","compose","applyMiddleware","apply","__REDUX_DEVTOOLS_EXTENSION__","App_loop","session","obj","dt","App","es","components_MainWrapper","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.dfdbf488.chunk.js","sourcesContent":["import { ADD_FILE, REMOVE_FILE } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nconst filesReducer = (state = initialState, action) => {\r\n  const newState = [...state];\r\n  switch (action.type) {\r\n    case ADD_FILE:\r\n      newState.push(action.payload);\r\n      return newState;\r\n    case REMOVE_FILE:\r\n      newState.splice(action.payload, 1);\r\n      return newState;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default filesReducer;\r\n","//Files types;\r\nexport const ADD_FILE = \"ADD_FILE\";\r\nexport const REMOVE_FILE = \"REMOVE_FILE\";\r\n\r\n//Error types\r\nexport const FILE_ERROR = \"FILE_ERROR\";\r\nexport const VALIDATION_ERROR = \"VALIDATION_ERROR\";\r\nexport const SIZE_ERROR = \"SIZE_ERROR\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\n\r\n//Ui types\r\nexport const OPEN_FILE_DND = \"OPEN_FILE_DND\";\r\nexport const CLOSE_FILE_DND = \"CLOSE_FILE_DND\";\r\nexport const LETTER_SEND = \"LETTER_SEND\";\r\n\r\n//letters types\r\nexport const GET_LETTERS = \"GET_LETTERS\";\r\nexport const ADD_LETTER = \"ADD_LETTER\";\r\nexport const LETTERS_LOADING = \"LETTERS_LOADING\";\r\n","import {\r\n  OPEN_FILE_DND,\r\n  CLOSE_FILE_DND,\r\n  LETTERS_LOADING,\r\n  ADD_LETTER,\r\n  LETTER_SEND\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  isFileDndDisplayed: false,\r\n  lettersLoading: false,\r\n  isLetterSend: false\r\n};\r\n\r\nconst uiReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case OPEN_FILE_DND:\r\n      return { isFileDndDisplayed: true };\r\n    case CLOSE_FILE_DND:\r\n      return { isFileDndDisplayed: false };\r\n    case LETTERS_LOADING:\r\n      return { ...state, lettersLoading: true };\r\n    case ADD_LETTER:\r\n      return { ...state, lettersLoading: false };\r\n    case LETTER_SEND:\r\n      return { ...state, isLetterSend: true, email: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducer;\r\n","import {\r\n  FILE_ERROR,\r\n  CLOSE_FILE_DND,\r\n  VALIDATION_ERROR,\r\n  SIZE_ERROR,\r\n  CLEAR_ERROR\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nconst errorReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case FILE_ERROR:\r\n      return { ...state, file: action.payload };\r\n    case CLOSE_FILE_DND:\r\n      const newState = { ...state };\r\n      delete newState.file;\r\n      return newState;\r\n    case VALIDATION_ERROR:\r\n      return { ...state, form: action.payload };\r\n    case SIZE_ERROR:\r\n      return {\r\n        ...state,\r\n        size: \"Объем загруженных файлов не должен превышать 20 Мб\"\r\n      };\r\n    case CLEAR_ERROR:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default errorReducer;\r\n","import { GET_LETTERS, ADD_LETTER } from \"../actions/types\";\r\n\r\nconst initialState = [];\r\n\r\nconst lettersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_LETTERS:\r\n      return action.payload;\r\n    case ADD_LETTER:\r\n      const newState = [...state];\r\n      newState.push(action.payload);\r\n      return newState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default lettersReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer } from \"redux-form\";\r\n\r\nimport filesReducer from \"./filesReducer\";\r\nimport uiReducer from \"./uiReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport lettersReducer from \"./lettersReducer\";\r\n\r\nexport default combineReducers({\r\n  test: () => 5,\r\n  form: reducer,\r\n  files: filesReducer,\r\n  ui: uiReducer,\r\n  error: errorReducer,\r\n  letters: lettersReducer\r\n});\r\n","import React from \"react\";\r\n\r\nimport { formatDate } from \"../../../utils/formatDate\";\r\nimport \"./LetterItem.css\";\r\n\r\nconst LetterItem = ({ letter }) => {\r\n  const date = formatDate(letter.date);\r\n  return (\r\n    <tr className=\"letters-item\">\r\n      <th className=\"letter-item__column\">{date}</th>\r\n      <th className=\"letter-item__column\">{letter.subject}</th>\r\n      {letter.status === \"-1\" ? (\r\n        <th className=\"letter-item__column_success\">Отправлено</th>\r\n      ) : letter.status < -1 ? (\r\n        <th className=\"letter-item__column_fail\">Ошибка</th>\r\n      ) : (\r\n        <th className=\"letter-item__column_await\">В очереди</th>\r\n      )}\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default LetterItem;\r\n","export const formatDate = date => {\r\n  let result = \"\";\r\n\r\n  const month = date.split(\"-\")[1];\r\n  const day = date.split(\"-\")[2].split(\" \")[0];\r\n\r\n  result += day + \" \";\r\n\r\n  switch (month) {\r\n    case \"01\":\r\n      result += \"января\";\r\n      return result;\r\n    case \"02\":\r\n      result += \"февраля\";\r\n      return result;\r\n    case \"03\":\r\n      result += \"марта\";\r\n      return result;\r\n    case \"04\":\r\n      result += \"апреля\";\r\n      return result;\r\n    case \"05\":\r\n      result += \"мая\";\r\n      return result;\r\n    case \"06\":\r\n      result += \"июня\";\r\n      return result;\r\n    case \"07\":\r\n      result += \"июля\";\r\n      return result;\r\n    case \"08\":\r\n      result += \"августа\";\r\n      return result;\r\n    case \"09\":\r\n      result += \"сентября\";\r\n      return result;\r\n    case \"10\":\r\n      result += \"октября\";\r\n      return result;\r\n    case \"11\":\r\n      result += \"ноября\";\r\n      return result;\r\n    case \"12\":\r\n      result += \"декабря\";\r\n      return result;\r\n    default:\r\n      return result;\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LetterItem from \"../LetterItem\";\r\nimport \"./LettersContainer.css\";\r\n\r\nconst LettersContainer = ({ letters, loading }) => {\r\n  const renderContent = loading ? (\r\n    <p>Подождите, сейчас мы загрузим ваши сообщения</p>\r\n  ) : letters.length > 0 ? (\r\n    <table className=\"letters-table\">\r\n      <thead>\r\n        <tr className=\"letters-header\">\r\n          <th className=\"letters-header__date-column\">Дата</th>\r\n          <th className=\"letters-header__subject-column\">Тема</th>\r\n          <th className=\"letters-header__status-column\">Статус</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {letters.map((letter, index) => (\r\n          <LetterItem letter={letter} key={index} />\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  ) : (\r\n    <p>Сообщения еще не отправляллись</p>\r\n  );\r\n  return (\r\n    <div className=\"letters-container\">\r\n      <h1 className=\"letters-container__header\">Отправленные сообщения</h1>\r\n      {renderContent}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  letters: state.letters,\r\n  loading: state.ui.lettersLoading\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(LettersContainer);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport cn from \"classnames\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nimport \"./FileInput.css\";\r\nimport { addFile } from \"../../../actions/fileActions\";\r\nimport { closeDnd } from \"../../../actions/uiActions\";\r\n\r\nconst FileInput = ({ addFile, isDisplayed, closeDnd, fileError }) => {\r\n  return (\r\n    <div\r\n      className={cn({\r\n        \"file-input_displayed\": isDisplayed,\r\n        \"file-input\": !isDisplayed\r\n      })}\r\n      onDrop={event => {\r\n        event.preventDefault();\r\n        addFile(event.dataTransfer.files[0]);\r\n      }}\r\n      onDragOver={event => {\r\n        event.preventDefault();\r\n      }}\r\n    >\r\n      <h1 className=\"file-input__header\">Бросайте файлы сюда, я ловлю</h1>\r\n      <p className=\"file-input__text\">\r\n        Мы принимаем картинки (jpg, png, gif), офисные файлы(doc, xls, pdf) и\r\n        zip-архивы.\r\n      </p>\r\n      <p className=\"file-input__text\">Размеры файла до 5 МБ</p>\r\n      <p className=\"file-input__error-display\">{fileError}</p>\r\n      <div className=\"file-input__btn-close\" onClick={closeDnd}>\r\n        <FaTimes />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  isDisplayed: state.ui.isFileDndDisplayed,\r\n  fileError: state.error.file\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addFile, closeDnd }\r\n)(FileInput);\r\n","import { ADD_FILE, REMOVE_FILE, FILE_ERROR, CLOSE_FILE_DND } from \"./types\";\r\n\r\nconst validateFileExtension = fileName => {\r\n  return !/^(.*\\.(?!(jpg|gif|png|doc|xls|pdf|zip)$))?[^.]*$/i.test(fileName);\r\n};\r\n\r\nconst validateFileSize = fileSize => {\r\n  return fileSize < 5000000 ? true : false;\r\n};\r\n\r\nexport const addFile = file => dispatch => {\r\n  //Check if file extension matches allowed file types\r\n  if (!validateFileExtension(file.name)) {\r\n    return dispatch({ type: FILE_ERROR, payload: \"Неподходящий тип файла\" });\r\n  }\r\n\r\n  //Check if file size exceeds 5 Mb\r\n  if (!validateFileSize(file.size)) {\r\n    return dispatch({\r\n      type: FILE_ERROR,\r\n      payload: \"Размер файла не должен превышать 5Mb\"\r\n    });\r\n  }\r\n\r\n  const newFile = { name: file.name, encoding: \"base64\", size: file.size };\r\n\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = () => reject(reader.error);\r\n  })\r\n    .then(result => {\r\n      //Add new file to store, close find dnd\r\n      dispatch({ type: CLOSE_FILE_DND });\r\n      dispatch({ type: ADD_FILE, payload: { ...newFile, content: result } });\r\n    })\r\n    .catch(err => console.log(err));\r\n};\r\n\r\nexport const removeFile = index => {\r\n  return { type: REMOVE_FILE, payload: index };\r\n};\r\n","import { OPEN_FILE_DND, CLOSE_FILE_DND } from \"./types\";\r\n\r\nexport const openDnd = () => ({ type: OPEN_FILE_DND });\r\nexport const closeDnd = () => ({ type: CLOSE_FILE_DND });\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { FaRedoAlt } from \"react-icons/fa\";\r\n\r\nimport \"./MessageStatus.css\";\r\n\r\nconst MessageStatus = ({ email }) => {\r\n  return (\r\n    <div className=\"message-status\">\r\n      <h1>Сообщение поставлено в очередь на отправку</h1>\r\n      <p>\r\n        Совсем скоро сообщение вылетит из сервера, и будет двигаться в сторону\r\n        почты получателя «{email}» со скоростью электронов.\r\n      </p>\r\n      <button\r\n        className=\"message-status__btn-reload\"\r\n        onClick={() => window.location.reload()}\r\n      >\r\n        <FaRedoAlt />\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ email: state.ui.email });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(MessageStatus);\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\n\r\nimport \"./EmailInput.css\";\r\n\r\n/* Field name is passed as from_name/to_name\r\nso reduxForm wond treat form fiels from.name and to.name \r\nas object properties */\r\nconst EmailInput = ({ label, person, error }) => {\r\n  return (\r\n    <div className=\"email-input\">\r\n      <label className=\"email-input__label\">{label}</label>\r\n      <Field\r\n        component=\"input\"\r\n        type=\"text\"\r\n        name={`${person}_name`}\r\n        id={`${person}_name`}\r\n        className=\"email-input__field_left\"\r\n        placeholder=\"Имя\"\r\n      />\r\n      <Field\r\n        component=\"input\"\r\n        type=\"email\"\r\n        name={`${person}_email`}\r\n        id={`${person}_email`}\r\n        className=\"email-input__field_right\"\r\n        placeholder=\"Email\"\r\n      />\r\n      <div className=\"email-error\">\r\n        {error.name ? (\r\n          <div className=\"email-error__name\">{error.name}</div>\r\n        ) : null}\r\n        {error.email ? (\r\n          <div className=\"email-error__email\">{error.email}</div>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailInput;\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\n\r\nimport \"./SubjectInput.css\";\r\n\r\nconst SubjectInput = ({ label, error }) => {\r\n  return (\r\n    <div className=\"subject-input\">\r\n      <label className=\"subject-input__label\">{label}</label>\r\n      <Field\r\n        className=\"subject-input__field\"\r\n        component=\"input\"\r\n        type=\"text\"\r\n        name=\"subject\"\r\n        placeholder=\"Тема письма\"\r\n        id=\"subject\"\r\n      />\r\n      {error ? (\r\n        <div className=\"subject-input__error-display\">{error}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubjectInput;\r\n","import React from \"react\";\r\nimport { Field } from \"redux-form\";\r\n\r\nimport \"./MessageInput.css\";\r\n\r\nconst MessageInput = ({ label, error }) => {\r\n  return (\r\n    <div className=\"message-input\">\r\n      <label className=\"message-input__label\">{label}</label>\r\n      <Field\r\n        className=\"message-input__field\"\r\n        component=\"textarea\"\r\n        name=\"message\"\r\n        placeholder=\"Текст сообщения\"\r\n        id=\"message\"\r\n      />\r\n      {error ? (\r\n        <div className=\"message-input__error-display\">{error}</div>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageInput;\r\n","import React from \"react\";\r\nimport { FaPaperclip } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./AttachFilesButton.css\";\r\nimport { openDnd } from \"../../../actions/uiActions\";\r\n\r\nconst AttachFilesButton = ({ openDnd }) => {\r\n  return (\r\n    <button className=\"attach-files-btn\" type=\"button\" onClick={openDnd}>\r\n      <FaPaperclip />\r\n      Прикрепить файлы\r\n    </button>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { openDnd }\r\n)(AttachFilesButton);\r\n","import React from \"react\";\r\nimport { FaPaperclip, FaTrashAlt } from \"react-icons/fa\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./FileList.css\";\r\nimport { removeFile } from \"../../../actions/fileActions\";\r\n\r\nconst FileListItem = ({ file, removeFile, index }) => {\r\n  return (\r\n    <div className=\"file-list__item\">\r\n      <div>\r\n        <FaPaperclip size=\"24\" />\r\n      </div>\r\n      <span>{file.name}</span>\r\n      <button type=\"button\" onClick={() => removeFile(index)}>\r\n        <FaTrashAlt /> Удалить\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { removeFile }\r\n)(FileListItem);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport FileListItem from \"./FileListItem\";\r\nimport \"./FileList.css\";\r\n\r\nconst FileListContainer = ({ files }) => {\r\n  return (\r\n    <div className=\"file-list\">\r\n      {files.map((file, index) => (\r\n        <FileListItem file={file} key={index} index={index} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ files: state.files });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(FileListContainer);\r\n","import validator from \"validator\";\r\n\r\nimport {\r\n  VALIDATION_ERROR,\r\n  SIZE_ERROR,\r\n  CLEAR_ERROR,\r\n  LETTER_SEND\r\n} from \"./types\";\r\nimport { addStorageItem } from \"../storage/utils\";\r\n\r\n//Form keys\r\nconst keys = [\r\n  \"from_email\",\r\n  \"from_name\",\r\n  \"to_email\",\r\n  \"to_name\",\r\n  \"subject\",\r\n  \"message\"\r\n];\r\n\r\n//Util function to check if value is empty\r\nconst isEmpty = value =>\r\n  value === undefined ||\r\n  value === null ||\r\n  (typeof value === \"object\" && Object.keys(value).length === 0) ||\r\n  (typeof value === \"string\" && value.trim().length === 0);\r\n\r\nconst validateFormFields = formValues => {\r\n  const errors = {};\r\n\r\n  //Convert value to empty strings to use validator\r\n  for (let key of keys) {\r\n    formValues[key] = isEmpty(formValues[key]) ? \"\" : formValues[key];\r\n  }\r\n\r\n  if (!validator.isEmail(formValues.from_email)) {\r\n    errors.from_email = \"Некорректный email\";\r\n  }\r\n\r\n  if (validator.isEmpty(formValues.from_email)) {\r\n    errors.from_email = \"Email не может быть пустым\";\r\n  }\r\n\r\n  if (validator.isEmpty(formValues.from_name)) {\r\n    errors.from_name = \"Имя не может быть пустым\";\r\n  }\r\n\r\n  if (!validator.isEmail(formValues.to_email)) {\r\n    errors.to_email = \"Некорректный email\";\r\n  }\r\n\r\n  if (validator.isEmpty(formValues.to_email)) {\r\n    errors.to_email = \"Email не может быть пустым\";\r\n  }\r\n\r\n  if (validator.isEmpty(formValues.to_name)) {\r\n    errors.to_name = \"Имя не может быть пустым\";\r\n  }\r\n\r\n  if (validator.isEmpty(formValues.subject)) {\r\n    errors.subject = \"Тема не может быть пустой\";\r\n  }\r\n\r\n  if (validator.isEmpty(formValues.message)) {\r\n    errors.message = \"Напишите, пожалуйста, хоть что-нибудь\";\r\n  }\r\n\r\n  const isValid = Object.keys(errors).length === 0 ? true : false;\r\n  return { errors, isValid };\r\n};\r\n\r\nconst validateFilesSize = files => {\r\n  let summSize = 0;\r\n  for (let file of files) {\r\n    summSize += file.size;\r\n  }\r\n  return summSize <= 20000000 ? true : false;\r\n};\r\n\r\nexport const submitForm = (formValues, reset) => (dispatch, getState) => {\r\n  //Validate input\r\n  const { errors, isValid } = validateFormFields(formValues);\r\n  if (!isValid) {\r\n    return dispatch({ type: VALIDATION_ERROR, payload: errors });\r\n  }\r\n\r\n  const files = getState().files;\r\n  //Check if summary files size exceeds 20Mb\r\n  if (!validateFilesSize(files)) {\r\n    return dispatch({ type: SIZE_ERROR });\r\n  }\r\n\r\n  //Clear possible remaining errors\r\n  dispatch({ type: CLEAR_ERROR });\r\n\r\n  //Format files\r\n  const payloadFiles = [];\r\n  for (let file of files) {\r\n    payloadFiles.push({\r\n      name: file.name,\r\n      content: file.content,\r\n      encoding: file.encoding\r\n    });\r\n  }\r\n\r\n  const payload = {\r\n    action: \"issue.send.test\",\r\n    letter: {\r\n      subject: formValues.subject,\r\n      \"from.name\": formValues.from_name,\r\n      \"from.email\": formValues.from_email,\r\n      \"to.name\": formValues.to_name,\r\n      message: { text: formValues.message },\r\n      attaches: payloadFiles\r\n    },\r\n    sendwhen: \"test\",\r\n    mca: [formValues.to_email]\r\n  };\r\n\r\n  const sendsay = new window.Sendsay({\r\n    auth: {\r\n      login: \"daniil2305@yandex.ru\",\r\n      password: \"xoo4Yav\"\r\n    }\r\n  });\r\n  dispatch({ type: LETTER_SEND, payload: formValues.to_email });\r\n  sendsay\r\n    .request(payload)\r\n    .then(res => addStorageItem({ ...res, subject: formValues.subject }))\r\n    .catch(err => console.log(err));\r\n};\r\n","import React from \"react\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport \"./FormContainer.css\";\r\nimport EmailInput from \"../EmailInput\";\r\nimport SubjectInput from \"../SubjectInput\";\r\nimport MessageInput from \"../MessageInput\";\r\nimport AttachFilesButton from \"../AttachFilesButton\";\r\nimport FileListContainer from \"../FileList/FileListContainer\";\r\nimport { submitForm } from \"../../../actions/formActions\";\r\n\r\nconst FormContainer = ({\r\n  handleSubmit,\r\n  submitForm,\r\n  formError,\r\n  reset,\r\n  size\r\n}) => {\r\n  return (\r\n    <form\r\n      className=\"main-form\"\r\n      onSubmit={handleSubmit(formValues => {\r\n        submitForm(formValues);\r\n      })}\r\n      noValidate\r\n    >\r\n      <h1 className=\"main-form__header\">Отправлялка сообщений</h1>\r\n      <EmailInput\r\n        label=\"От кого\"\r\n        person=\"from\"\r\n        error={{ name: formError.from_name, email: formError.from_email }}\r\n      />\r\n      <EmailInput\r\n        label=\"Кому\"\r\n        person=\"to\"\r\n        error={{ name: formError.to_name, email: formError.to_email }}\r\n      />\r\n      <SubjectInput label=\"Тема письма\" error={formError.subject} />\r\n      <MessageInput label=\"Сообщение\" error={formError.message} />\r\n      <FileListContainer />\r\n      <AttachFilesButton />\r\n      <button className=\"main-form__btn-submit\">Отправить</button>\r\n      {size ? (\r\n        <div className=\"main-form__file-size-error\">\r\n          Суммарный размер файлов не должен превышать 20 Mb\r\n        </div>\r\n      ) : null}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst formConnected = reduxForm({ form: \"main-form\" })(FormContainer);\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    formError: state.error.form ? state.error.form : {},\r\n    size: state.error.size\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { submitForm }\r\n)(formConnected);\r\n","export const addStorageItem = item => {\r\n  if (!localStorage.letters) {\r\n    localStorage.setItem(\"letters\", JSON.stringify([item]));\r\n  } else {\r\n    const letters = JSON.parse(localStorage.letters);\r\n    letters.push(item);\r\n    localStorage.setItem(\"letters\", JSON.stringify(letters));\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport LettersContainer from \"../letters/LettersContainer\";\r\nimport FileInput from \"../form/FileInput\";\r\nimport MessageStatus from \"../MessageStatus\";\r\nimport FormContainer from \"../form/FormContainer\";\r\n\r\nconst MainWrapper = ({ isLetterSend }) => {\r\n  return (\r\n    <div>\r\n      {isLetterSend ? (\r\n        <div className=\"main-wrapper\">\r\n          <MessageStatus />\r\n        </div>\r\n      ) : (\r\n        <div className=\"main-wrapper\">\r\n          <FormContainer />\r\n          <FileInput />\r\n        </div>\r\n      )}\r\n      <LettersContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => ({ isLetterSend: state.ui.isLetterSend });\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(MainWrapper);\r\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport \"./App.css\";\n\nimport reducers from \"./reducers\";\nimport { ADD_LETTER, LETTERS_LOADING } from \"./actions/types\";\n\nimport MainWrapper from \"./components/MainWrapper\";\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducers,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nif (localStorage.letters) {\n  const sendsay = new window.Sendsay({\n    auth: {\n      login: \"daniil2305@yandex.ru\",\n      password: \"xoo4Yav\"\n    }\n  });\n\n  store.dispatch({ type: LETTERS_LOADING });\n  const letters = JSON.parse(localStorage.letters);\n  for (let letter of letters) {\n    sendsay\n      .request({\n        action: \"track.get\",\n        id: letter[\"track.id\"],\n        session: \"session\"\n      })\n      .then(res => {\n        store.dispatch({\n          type: ADD_LETTER,\n          payload: {\n            date: res.obj.dt,\n            subject: letter.subject,\n            status: res.obj.status\n          }\n        });\n      });\n  }\n}\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <MainWrapper />\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}